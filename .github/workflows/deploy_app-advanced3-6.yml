name: Build and deploy Next.js app to Azure Web App
on:
  push:
    branches:
      - deploy
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: npm install
        run: npm ci
      
      - name: Fix Tailwind and PostCSS dependencies
        run: |
          # Remove potentially conflicting packages
          npm uninstall @tailwindcss/postcss7-compat
          npm uninstall tailwindcss
          
          # Install correct versions
          npm install -D tailwindcss@3.3.2 postcss@8.4.24 autoprefixer@10.4.14
      
      - name: Create postcss.config.js if needed
        run: |
          if [ ! -f "postcss.config.js" ]; then
            echo "module.exports = {
              plugins: {
                tailwindcss: {},
                autoprefixer: {},
              },
            }" > postcss.config.js
          fi
          
      - name: Create optimized production build
        run: npm run build
          
      - name: Create server.js
        run: |
          cat > server.js << 'EOL'
          const { createServer } = require("http");
          const { parse } = require("url");
          const next = require("next");
          const app = next({ 
            dev: process.env.NODE_ENV !== "production", 
            dir: __dirname 
          });
          const handle = app.getRequestHandler();
          const port = process.env.PORT || 3000;
          app.prepare().then(() => {
            createServer((req, res) => {
              const parsedUrl = parse(req.url, true);
              handle(req, res, parsedUrl);
            }).listen(port, (err) => {
              if (err) throw err;
              console.log(`> Ready on http://localhost:${port}`);
            });
          }).catch(err => {
            console.error("Error starting server:", err);
            process.exit(1);
          });
          EOL
          
      - name: Update package.json for Azure
        run: |
          # Add start script if it doesn't exist
          if ! grep -q "\"start\":" package.json; then
            sed -i 's/"scripts": {/"scripts": {\n    "start": "node server.js",/g' package.json
          fi
          
      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x "*.git*" "node_modules/*" ".next/cache/*"
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          
      - name: Unzip artifact for deployment
        run: unzip release.zip
        
      - name: Install production dependencies
        run: npm ci --omit=dev
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-advanced3-6'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
